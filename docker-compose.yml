version: "3"

services:
  nginx:
    image: wodby/nginx:1.19-5.10.9
    container_name: "${PROJECT_NAME}_nginx"
    depends_on:
      - php
    environment:
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_VHOST_PRESET: php
      NGINX_SERVER_ROOT: /var/www/html/public
      NGINX_DISABLE_CACHING: "on"
    volumes:
      - ./app/:/var/www/html
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`${PROJECT_BASE_URL}`)"

#  mariadb:
#    image: wodby/mariadb:10.5-3.9.5
#    container_name: "${PROJECT_NAME}_mariadb"
#    stop_grace_period: 30s
#    ports:
#      - "3306:3306"
#    environment:
#      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
#      MYSQL_DATABASE: $DB_NAME
#      MYSQL_USER: $DB_USER
#      MYSQL_PASSWORD: $DB_PASSWORD
#    volumes:
#      - maridb-vol:/var/lib/mysql # I want to manage volumes manually.

  php:
    image: wodby/php:8.1
    container_name: "${PROJECT_NAME}_php"
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      DB_HOST: $DB_HOST
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
      PHP_XDEBUG: 1
      PHP_XDEBUG_MODE: develop,debug
      PHP_XDEBUG_START_WITH_REQUEST: 1
      PHP_XDEBUG_LOG_LEVEL: 0
      PHP_IDE_CONFIG: serverName=default
      PHP_XDEBUG_REMOTE_HOST: host.docker.internal
      # https://laravel.com/docs/9.x/configuration#additional-environment-files
      # APP_ENV: local
    volumes:
      - ./app/:/var/www/html

#  mailhog:
#    image: mailhog/mailhog
#    container_name: "${PROJECT_NAME}_mailhog"
#    labels:
#      - "traefik.http.services.${PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
#      - "traefik.http.routers.${PROJECT_NAME}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL}`)"

  traefik:
    image: traefik:v2.6
    container_name: "${PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker
    ports:
      - '80:80'
      - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

# volumes:
#   maridb-vol:
